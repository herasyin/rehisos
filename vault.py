# storage of creepy ship and useful func üùÑ
# —Åopyleft: ‚å® 2022 >>-her--> all rights not reserved

import os

HERA_ID = 726267858283266160
POST_ID = 802766660099768321
CHAT_ID = 859024516906614784
LOGS_ID = 963216065490481232

ROLES = {
	'<:eye:742677301157953559>': 741356737373667458 #observer
}

EXCROLES = ()
MAX_ROLES_PER_USER = 666

BOLD = '**'; SPOILER = '||'; CODE = '```'; UNDERLINE = '__'; STRIKE = '~~' # discord formating
ICON = [
	'<:vsrat:743399038337941527>',				#  0
	'<:rehisos:742685931722506330>',			#  1
	'<:cur:913398850214055966>',				#  2
	'<:fuckyou:742675532600049704>',			#  3
	'<:worker:791586102825582602>',				#  4
	'<:pressF:786230431561023529>',				#  5
	'<:tv1:742677301581447258>',				#  6
	'<:tea:847101198308999208>',				#  7
	'<:directory_fatal:974283553229639730>',	# -7
	'<:directory_error:974283553212878919>',	# -6
	'<:directory_warning:974283553170927636>',	# -5
	'<:directory_info:974283553275797515>',		# -4
	'<:directory_member:974276303308075038>',	# -3
	'<:directory_closed:847085141326299146>',	# -2
	'<a:loading:933335927659561070>'			# -1
]


HELPMESSAGE = f'{ICON[1]} **REHISOS USER MANUAL**\n\n\
` ‚ñà‚ñà‚ñÄ‚ñà‚ñà‚ñà  ‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñë ‚ñà‚ñà  ‚ñà‚ñà‚ñì  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñí‚ñà‚ñà‚ñà‚ñà‚ñà    ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà `\n\
`‚ñì‚ñà‚ñà ‚ñí ‚ñà‚ñà‚ñí‚ñì‚ñà   ‚ñÄ ‚ñì‚ñà‚ñà‚ñë ‚ñà‚ñà‚ñí‚ñì‚ñà‚ñà‚ñí‚ñí‚ñà‚ñà    ‚ñí ‚ñí‚ñà‚ñà‚ñí  ‚ñà‚ñà‚ñí‚ñí‚ñà‚ñà    ‚ñí `\n\
`‚ñì‚ñà‚ñà ‚ñë‚ñÑ‚ñà ‚ñí‚ñí‚ñà‚ñà‚ñà   ‚ñí‚ñà‚ñà‚ñÄ‚ñÄ‚ñà‚ñà‚ñë‚ñí‚ñà‚ñà‚ñí‚ñë ‚ñì‚ñà‚ñà‚ñÑ   ‚ñí‚ñà‚ñà‚ñë  ‚ñà‚ñà‚ñí‚ñë ‚ñì‚ñà‚ñà‚ñÑ   `\n\
`‚ñí‚ñà‚ñà‚ñÄ‚ñÄ‚ñà‚ñÑ  ‚ñí‚ñì‚ñà  ‚ñÑ ‚ñë‚ñì‚ñà ‚ñë‚ñà‚ñà ‚ñë‚ñà‚ñà‚ñë  ‚ñí   ‚ñà‚ñà‚ñí‚ñí‚ñà‚ñà   ‚ñà‚ñà‚ñë  ‚ñí   ‚ñà‚ñà‚ñí`\n\
`‚ñë‚ñà‚ñà‚ñì ‚ñí‚ñà‚ñà‚ñí‚ñë‚ñí‚ñà‚ñà‚ñà‚ñà‚ñí‚ñë‚ñì‚ñà‚ñí‚ñë‚ñà‚ñà‚ñì‚ñë‚ñà‚ñà‚ñë‚ñí‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñí‚ñí‚ñë ‚ñà‚ñà‚ñà‚ñà‚ñì‚ñí‚ñë‚ñí‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñí‚ñí`\n\
`‚ñë ‚ñí‚ñì ‚ñë‚ñí‚ñì‚ñë‚ñë‚ñë ‚ñí‚ñë ‚ñë ‚ñí ‚ñë‚ñë‚ñí‚ñë‚ñí‚ñë‚ñì  ‚ñí ‚ñí‚ñì‚ñí ‚ñí ‚ñë‚ñë ‚ñí‚ñë‚ñí‚ñë‚ñí‚ñë ‚ñí ‚ñí‚ñì‚ñí ‚ñí ‚ñë`\n\
`  ‚ñë‚ñí ‚ñë ‚ñí‚ñë ‚ñë ‚ñë  ‚ñë ‚ñí ‚ñë‚ñí‚ñë ‚ñë ‚ñí ‚ñë‚ñë ‚ñë‚ñí  ‚ñë ‚ñë  ‚ñë ‚ñí ‚ñí‚ñë ‚ñë ‚ñë‚ñí  ‚ñë ‚ñë`\n\
`  ‚ñë‚ñë   ‚ñë    ‚ñë    ‚ñë  ‚ñë‚ñë ‚ñë ‚ñí ‚ñë‚ñë  ‚ñë  ‚ñë  ‚ñë ‚ñë ‚ñë ‚ñí  ‚ñë  ‚ñë  ‚ñë  `\n\
`   ‚ñë        ‚ñë  ‚ñë ‚ñë  ‚ñë  ‚ñë ‚ñë        ‚ñë      ‚ñë ‚ñë        ‚ñë  `\n\
`‚ñÄ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñÄ`\n\
`      ‚ñÄ‚ñà‚ñà‚ñà‚ñÄ                                            `\n\
`        ‚ñà‚ñí                ‚ñÄ  ‚ñà‚ñÄ‚ñÄ‚ñÑ ‚ñà‚ñÄ‚ñÄ ‚ñÑ‚ñÄ‚ñÄ‚ñÑ             `\n\
`        ‚ñà‚ñí   ‚ñÑ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñì‚ñí‚ñë  ‚ñà‚ñÄ ‚ñà  ‚ñà ‚ñà‚ñÄ  ‚ñà  ‚ñà ‚ñë‚ñí‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñÑ`\n\
`        ‚ñì‚ñë   ‚ñà‚ñà          ‚ñÄ‚ñÄ‚ñÄ ‚ñÄ  ‚ñÄ ‚ñÄ    ‚ñÄ‚ñÄ            ‚ñà‚ñà`\n\
`        ‚ñí    ‚ñà‚ñà   .help      ‚ö≤   —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥       ‚ñà‚ñà`\n\
`        ‚ñë    ‚ñà‚ñà   .bones     ‚ö≤   –∫–∏–Ω—É—Ç—å –∫–æ—Å—Ç–∏        ‚ñà‚ñà`\n\
`             ‚ñà‚ñà   .whoami    ‚ö≤   –∫—Ç–æ —Ç—ã –ø–æ –∂–∏–∑–Ω–∏?    ‚ñà‚ñà`\n\
`        ‚ñë    ‚ñà‚ñà   .moonday   ‚ö≤   –ª—É–Ω–Ω—ã–π –¥–µ–Ω—å         ‚ñà‚ñà`\n\
`        ‚ñë    ‚ñà‚ñà   .today     ‚ö≤   –ø–æ –≥—Ä–∏–≥–æ—Ä–∏–∞–Ω—Å–∫–æ–º—É   ‚ñà‚ñà`\n\
`        ‚ñë    ‚ñà‚ñà   .data      ‚ö≤   –Ω–µ–µ–µ                ‚ñà‚ñà`\n\
`        ‚ñë    ‚ñà‚ñà   .grafic    ‚ö≤   –ø–æ—Å—Ç–æ–∏—Ç—å –≥—Ä–∞—Ñ–∏–∫     ‚ñà‚ñà`\n\
`        ‚ñí    ‚ñà‚ñà   .weather   ‚ö≤   –ø–æ–≥–æ–¥–∞ —Å–µ–π—á–∞—Å       ‚ñà‚ñà`\n\
`       ‚ñë‚ñì‚ñë   ‚ñà‚ñà                                      ‚ñà‚ñà`\n\
`       ‚ñì‚ñà‚ñì   ‚ñà‚ñà ‚ñÄ ‚ñÄ‚ñÄ ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñÄ ‚ñÄ‚ñÄ ‚ñÄ ‚ñà‚ñà`\n\
`        ‚ñÄ    ‚ñà‚ñà   .“ì…™ ôs·¥á·¥Ä Ä·¥Ñ ú·¥ç·¥á Ä ü·¥á·¥Ä ô Ä·¥Ä ú·¥Ä·¥çs   ??????   ‚ñà‚ñà`\n\
`             ‚ñà‚ñà                                      ‚ñà‚ñà`\n\
`             ‚ñÄ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñì‚ñí‚ñë ‚ñë‚ñí‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñÄ`\n'

HELPSQL = f'{ICON[6]} **SQL MANUAL**\n\n\
**CREATE** ~~IF NOT EXIST~~ **TABLE** ||table_name|| (||column_name|| ||column_datatype||, ...)\n\
**DROP** ~~IF EXIST~~ **TABLE** ||table_name||\n\n\
**SELECT** ||column_name||, ... **FROM** ||table_name||  **WHERE** ||column_name|| = ||value||\n\
**INSERT INTO** ||table_name|| (||column_name||, ...) **VALUES** (||value||, ...)\n\
**UPDATE** ||table_name|| **SET** ||column_name|| = ||new_value|| **WHERE** ||column_name|| = ||value||\n\n\
**ALTER** ||table_name|| **RENAME** ~~COLUMN~~ ||column_name|| **TO** ||new_column_name||\n\
**ALTER** ||table_name|| **ADD** ~~COLUMN~~ ||column_name||\n\
**ALTER** ||table_name|| **DROP** ~~COLUMN~~ ||column_name||\n\n\
{CODE}fix\n\
üùÑ DATATYPE   üùÑ TYPES ALLOWED IN THAT COLUMN\n\
üùô INTEGER    üùô INTEGER, REAL, TEXT, BLOB\n\
üùô REAL       üùô REAL, TEXT, BLOB\n\
üùô TEXT       üùô TEXT, BLOB\n\
üùô BLOB       üùô INTEGER, REAL, TEXT, BLOB\n\
‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ‚ñÅ\n\
INTEGER: /INT /INTEGER /TINYINT /SMALLINT /MEDIUMINT /BIGINT /UNSIGNED BIG INT /INT2 /INT8\n\
TEXT: /CHARACTER(20) /VARCHAR(255) /VARYING CHARACTER(255) /NCHAR(55) /NATIVE CHARACTER(70) /NVARCHAR(100) /TEXT /CLOB\n\
BLOB: /BLOB /no datatype specified\n\
REAL: /REAL /DOUBLE /DOUBLE PRECISION /FLOAT\n\
NUMERIC: /NUMERIC /DECIMAL(10,5) /BOOLEAN /DATE /DATETIME\n\
{CODE}\n\
DOCUMENTATION: ||https://www.postgresql.org/docs/current/index.html||\n\
–î–û–ö–£–ú–ï–ù–¢–ê–¶–ò–Ø: ||https://postgrespro.ru/docs/postgresql/14/index||\n\
HEROKU MANGING DB: ||https://devcenter.heroku.com/articles/managing-heroku-postgres-using-cli||\n'

FILES_URL = ['https://cdn.discordapp.com/attachments/871746192743211018/', '/Grand_Theft_Auto_V_Screenshot_20']

TYPEMESS = [
	"hui‚ñå\n‚êÄ",
	"hui\n‚êÄ",
	"hui‚ñå\n‚êÄ",
	"hui\n‚êÄ",
	"hui‚ñå\n‚êÄ",
	"hu‚ñå\n‚ê°",
	"h‚ñå\n‚ê°",
	"hi‚ñå\n‚ê°",
	"hi\n‚êÄ",
	"hi\n‚êõ",
	"~~hi~~\n‚êõ"
]

HI = [
	'–∫–∞–∫ –∂–µ –±–µ–∑ —Ç–µ–±—è –±—ã–ª–æ —Å–∫—É—á–Ω–æ!',
	'—Ö–∞–π.',
	'–¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!',
	'—Ç—ã –±–ª—è–¥—å –µ—â–µ –∫—Ç–æ?',
	'—è –∂–¥–∞–ª —Ç–µ–±—è –∏ –≤–æ—Ç —Ç—ã –∑–¥–µ—Å—å.',
	'–Ω—É –∏ –∞–≤–∞ —É —Ç–µ–±—è, —ç—Ç–æ –ª–µ—á–∏—Ç—Å—è –≤–æ–æ–±—â–µ?',
	'–º–Ω–µ –∫–∞–∂–µ—Ç—Å—è, –º—ã –ø–æ–¥—Ä—É–∂–∏–º—Å—è.'
]

BYE = [
	'–æ—Ç–∫–∏—Å –µ–±–ª–∞–Ω.',
	'—Å—ä–µ–±–∞–ª—Å—è –≤ —É–∂–∞—Å–µ.',
	'–Ω—É –∏ –ø–∏–∑–¥—É–π!',
	'–≤—ã—à–µ–ª –≤ –æ–∫–Ω–æ.',
	'–ø—Ä–æ—â–∞–π, —è –Ω–µ –±—É–¥—É —Å–∫—É—á–∞—Ç—å.',
	'–ø—Ä–æ—â–∞–π, —è –±—É–¥—É —Å–∫—É—á–∞—Ç—å.'
]

RACISTS_JOCKES = [
	'–í –º–∞—à–∏–Ω–µ —Å–∏–¥—è—Ç –Ω–µ–≥p –∏ –º–µ–∫—Å–∏–∫–∞–Ω–µ—Ü. –ö—Ç–æ –∑–∞ —Ä—É–ª—ë–º? –ö–æ–ø.',
	'–ù–µ–≥p –∏ –º–µ–∫—Å–∏–∫–∞–Ω–µ—Ü –ø–∞–¥–∞—é—Ç —Å –Ω–µ–±–æ—Å–∫—Ä—ë–±–∞. –ö—Ç–æ —É–ø–∞–¥—ë—Ç –ø–µ—Ä–≤—ã–º? –ö–∞–∫–∞—è —Ä–∞–∑–Ω–∏—Ü–∞?',
	'–ö–∞–∫ —É–∑–Ω–∞—Ç—å, —á—Ç–æ —É –Ω–µ–≥p–∞ –Ω–µ–¥–∞–≤–Ω–æ –±—ã–ª —Å–µ–∫—Å? –ï–≥–æ –≥–ª–∞–∑–∞ –≤—Å—ë –µ—â—ë –∫—Ä–∞—Å–Ω—ã–µ –æ—Ç –ø–µ—Ä—Ü–æ–≤–æ–≥–æ –±–∞–ª–æ–Ω—á–∏–∫–∞.',
	'–ö–∞–∫ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –Ω–µ–≥p –Ω–∞ –≤–µ–ª–æ—Å–∏–ø–µ–¥–µ? –í–æ—Ä.',
	'–ü–æ—á–µ–º—É, –∫–æ–≥–¥–∞ –∫–∞–∫–∏–µ-–ª–∏–±–æ –ø—Ä–∏–±–æ—Ä—ã –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç - –ø–æ –Ω–∏–º –±—å—é—Ç? –° —Ä–∞–±–∞–º–∏ —ç—Ç–æ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–ª–æ.',
	'–ù–µ–≥p –∏ –º–µ–∫—Å–∏–∫–∞–Ω–µ—Ü –ø–∞–¥–∞—é—Ç —Å –¥–µ—Ä–µ–≤–∞. –ö—Ç–æ —É–ø–∞–¥—ë—Ç –Ω–∞ –∑–µ–º–ª—é–ø–µ—Ä–≤—ã–º? –ú–µ–∫—Å–∏–∫–∞–Ω–µ—Ü. –ù–µ–≥p –Ω–µ –¥–æ–ª–µ—Ç–∏—Ç - –µ–º—É –ø–æ–º–µ—à–∞–µ—Ç –≤–µ—Ä—ë–≤–∫–∞.',
	'–ß—Ç–æ –æ–±—â–µ–≥–æ –º–µ–∂–¥—É –∫—Ä–æ—Å—Å–æ–≤–∫–∞–º–∏ Nice –∏ –ö—É-–ö–ª—É–∫—Å-–ö–ª–∞–Ω–æ–º? –û–Ω–∏ –∑–∞—Å—Ç–∞–≤–ª—è—é—Ç –Ω–µ–≥p–æ–≤ –±—ã—Å—Ç—Ä–æ –±–µ–≥–∞—Ç—å.',
	'–ö–∞–∫ —Å–¥–µ–ª–∞—Ç—å —Ç–∞–∫ —á—Ç–æ –±—ã –Ω–µ–≥p –ø–µ—Ä–µ—Å—Ç–∞–ª —Ç–æ–Ω—É—Ç—å? –ù–∞–¥–æ –ø—Ä–æ—Å—Ç–æ —É–±—Ä–∞—Ç—å –Ω–æ–≥—É —Å –µ–≥–æ –≥–æ–ª–æ–≤—ã.',
	'–ü–æ—á–µ–º—É –Ω–µ–≥p—ã —Ç–∞–∫ –ø–ª–æ—Ö–æ –ø–∞—Ö–Ω—É—Ç? –ß—Ç–æ–±—ã —Å–ª–µ–ø—ã–µ –∏—Ö —Ç–æ–∂–µ –º–æ–≥–ª–∏ –Ω–µ–Ω–∞–≤–∏–¥–µ—Ç—å.',
	'–ö–∞–∫–∏–µ —Ç—Ä–∏ —Å–∞–º—ã—Ö —Å–ª–æ–∂–Ω—ã—Ö –≥–æ–¥–∞ –≤ –∂–∏–∑–Ω–∏ –Ω–µ–≥—Ä–∞? –ü–µ—Ä–≤—ã–π –∫–ª–∞—Å—Å.',
	'–ü–æ—á–µ–º—É –Ω–µ–≥p, –∫–æ–≥–¥–∞ –µ–¥–µ—Ç –≤ –º–∞—à–∏–Ω–µ, –∑–∞–∫—Ä—ã–≤–∞–µ—Ç –≤—Å–µ –æ–∫–Ω–∞? –û–Ω –¥—É–º–∞–µ—Ç, —á—Ç–æ –≤–æ–Ω—è–µ—Ç —Å–Ω–∞—Ä—É–∂–∏.',
	'–ö–∞–∫ —Å–Ω—è—Ç—å –Ω–µ–≥—Ä–∞ —Å –¥–µ—Ä–µ–≤–∞? –ü–µ—Ä–µ—Ä–µ–∑–∞—Ç—å –≤–µ—Ä–µ–≤–∫—É.'
]

LABEL = {
	'CONTR': ['‚êÄ', '‚êÅ', '‚êÇ', '‚êÉ', '‚êÑ', '‚êÖ', '‚êÜ', '‚êá', '‚êà', '‚êâ', '‚êä', '‚êã', '‚êå', '‚êç', '‚êé', '‚êè', '‚êê', '‚êë', '‚êí', '‚êì', '‚êî', '‚êï', '‚êñ', '‚êó', '‚êò', '‚êô', '‚êö', '‚êõ', '‚êú', '‚êù', '‚êû', '‚êü', '‚ê†', '‚ê°'],
	'RAIN': ['üú≤', 'üúÅ', 'üúò', 'üùÑ', 'üùô', '‚∏ô', '‚∏∏', '‚∏ï', '‚µ†', '‚µê', '‚µÅ', '‚µâ', '„Ç≠', 'êìè', 'Í••', 'Í†π', 'Í¨ñ', 'Íî∂', 'Íò©', 'Íò®', 'Íòß', 'Íò¶', 'Íò•', 'Íò§', 'Íò£', 'Íò¢', 'Íò†', '‡∑¥'],
	'RUNES': ['·ö†', '·ö°', '·ö¢', '·ö£', '·ö§', '·ö•', '·ö¶', '·öß', '·ö®', '·ö©', '·ö™', '·ö´', '·ö¨', '·ö≠', '·öÆ', '·öØ', '·ö∞', '·ö±', '·ö≤', '·ö≥', '·ö¥', '·öµ', '·ö∂', '·ö∑', '·ö∏', '·öπ', '·ö∫', '·öª', '·öº', '·öΩ', '·öæ', '·öø', '·õÄ', '·õÅ', '·õÇ', '·õÉ', '·õÑ', '·õÖ', '·õÜ', '·õá', '·õà', '·õâ', '·õä', '·õã', '·õå', '·õç', '·õé', '·õè', '·õê', '·õë', '·õí', '·õì', '·õî', '·õï', '·õñ', '·õó', '·õò', '·õô', '·õö', '·õõ', '·õú', '·õù', '·õû', '·õü', '·õ†', '·õ°','·õ¢', '·õ£', '·õ§', '·õ•', '·õ¶', '·õß', '·õ®', '·õ©', '·õ™'],
	'rome': ['‚Ö∞','‚Ö±','‚Ö≤','‚Ö≥','‚Ö¥','‚Öµ','‚Ö∂','‚Ö∑','‚Ö∏','‚Öπ','‚Ö∫','‚Öª','‚Öº','‚ÖΩ','‚Öæ','‚Öø'],
	'ROME': ['‚Ö†','‚Ö°','‚Ö¢','‚Ö£','‚Ö§','‚Ö•','‚Ö¶','‚Öß','‚Ö®','‚Ö©','‚Ö™','‚Ö´','‚Ö¨','‚Ö≠','‚ÖÆ','‚ÖØ']
}

crypt = '6hZtEeD8krYF)A:Xoai4WjNOS2H^sgCP%5zydRQlf07npxuqVTUJmc91v#K3LG!bw$MBI'


#‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë   ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë   ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë  ‚ñë‚ñë   ‚ñë‚ñë ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë  ‚ñë‚ñë    ‚ñë‚ñë 
#‚ñí‚ñí   ‚ñí‚ñí ‚ñí‚ñí    ‚ñí‚ñí ‚ñí‚ñí    ‚ñí‚ñí ‚ñí‚ñí  ‚ñí‚ñí  ‚ñí‚ñí      ‚ñí‚ñí   ‚ñí‚ñí  ‚ñí‚ñí  ‚ñí‚ñí  
#‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí  ‚ñí‚ñí    ‚ñí‚ñí ‚ñí‚ñí    ‚ñí‚ñí ‚ñí‚ñí‚ñí‚ñí‚ñí   ‚ñí‚ñí‚ñí‚ñí‚ñí   ‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí    ‚ñí‚ñí‚ñí‚ñí   
#‚ñì‚ñì   ‚ñì‚ñì ‚ñì‚ñì    ‚ñì‚ñì ‚ñì‚ñì    ‚ñì‚ñì ‚ñì‚ñì  ‚ñì‚ñì  ‚ñì‚ñì      ‚ñì‚ñì   ‚ñì‚ñì    ‚ñì‚ñì    
#‚ñà‚ñà   ‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà    ‚ñà‚ñà    


async def paint(channel, pic_: str, time):
	with open(os.path.join('texted', 'ascii.txt'), encoding='utf-8') as pic_file:
		picture = pic_file.readlines()
		cat_ = {
			# 0: –Ω–∞—á–∞–ª–æ —Ä–∏—Å—É–Ω–∫–∞
			# 1: –∫–æ–Ω–µ—Ü –ø–µ—Ä–≤–æ–≥–æ —Å–ª–∞–π–¥–∞
			# 2: –Ω–∞—á–∞–ª–æ –≤—Ç–æ—Ä–æ–≥–æ —Å–ª–∞–π–¥–∞
			# 3: –∫–æ–Ω–µ—Ü —Ä–∏—Å—É–Ω–∫–∞ –º–∏–Ω—É—Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –≤ —Å–ª–∞–π–¥–µ
			# 4: —à–∞–≥ —Å–ª–∞–π–¥–æ–≤
			# 5: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –≤ —Å–ª–∞–π–¥–µ
			'nude': [616, 632, 620, 681, 4, 16],
			'warr': [1, 21, 24, 597, 22, 19]
		}
		await channel.send(f'{CODE}{"".join(picture[cat_[pic_][0]:cat_[pic_][1]])}{CODE}')
		message = channel.last_message
		for i in range(cat_[pic_][2], cat_[pic_][3], cat_[pic_][4]):
			time.sleep(0.9)
			await message.edit(content=f'{CODE}{"".join(picture[i:i+cat_[pic_][5]])}{CODE}')
		await message.delete(delay=1.0)


def describe(value: tuple, title='', names=None) -> str: 
	custom_columns = ['Fi‚Ä†','Se‚Ä†','Tre','Fo‚Ä†','Fi‚Ä°','Si‚Ä†','Se‚Ä°','Ei‚Ä†','Ni‚Ä†','Te‚Ä†','El‚Ä†','Twe']
	custom_rows = ['‚Ä†5‚Ä†k', '‚Ä†4‚Ä†k', '‚Ä†3‚Ä†k', '‚Ä†2‚Ä†k', '‚Ä†1‚Ä†k']
	block = ['‚ñà', '‚ñÑ']
	value = [int(val) for val in (value[:12] if len(value) > 12 else value)]
	names = [name for name in names[:12]] if names is not None and len(names) > 12 else names
	values = [val*1000 for val in value]
	max_value = max(values)
	bit = max_value//30
	grafic_length = len(values)*6 + 7
	current_rows = [
		max_value//1000,
		max_value//5*4//1000,
		max_value//5*3//1000,
		max_value//5*2//1000,
		max_value//5//1000
	]
	current_rows = list(map(lambda x: (str(x//1000)+'k').rjust(4, " "), current_rows)) if max(value) > 10000 else \
	               list(map(lambda x: str(x).rjust(4, " "), current_rows))
	with open(os.path.join('texted', 'grafic.txt'), encoding='utf-8') as grafic:
		this_grafic = [line[:grafic_length] for line in grafic.readlines()]
		this_grafic[18] = f'{this_grafic[18]}‚îÄ‚îÄ‚îÄ‚îÄ‚Æû' if len(values) < 13 else this_grafic[18]
		for i, row in enumerate(current_rows):
			this_grafic = [line.replace(custom_rows[i], current_rows[i]) for line in this_grafic]
		if names is not None:
			for i, name in enumerate(names):
				mane = name.rjust(3, "‚Ä†") if len(name) < 3 else name[:3]
				this_grafic[20] = this_grafic[20].replace(custom_columns[i], mane.upper())
		for index, value_ in enumerate(values):
			value_bit = (value_-bit)/(bit*2)
			value_height = -4 - int(value_bit + 0.25)
			value_residue = (value_-bit)//(bit/1000) - int(value_bit+0.25)*2000
			for i in range(-4, value_height, -1):
				this_grafic[i] = this_grafic[i].replace(f'‚ñà{index:X}‚ñà', block[0]*3)
			if value_residue > 999:
				this_grafic[value_height] = this_grafic[value_height].replace(f'‚ñà{index:X}‚ñà', block[1]*3)
			this_grafic = [line.replace(f'‚ñà{index:X}‚ñà', '   ') for line in this_grafic]
		printer = ''.join([f'{line}\n' for line in this_grafic])
		grafic_ = f'{CODE}{title}{printer}{CODE}'
		return grafic_


def formater(records, icon='', description=None) -> str:
	linage = [description]
	for data in records:
		linage.append(list(data))
	for i in range(len(linage[0])):
		size = max((len(str(x[i])) for x in linage)) + 2
		for i_ in range(len(linage)):
			linage[i_][i] = str(linage[i_][i]).ljust(size, " ")
	package = f'  ‚îå {"‚îå ".join(linage[0])}  \n'
	for data in linage[1:]:
		package += f'  ‚îä {"‚îä ".join([str(x) for x in data])}  \n'
	package = f'{CODE}fix\n{icon}\n{package}\nü°∑{CODE}'
	return package


def decoder(pack_, key) -> str:
	ring = int(''.join(x for x in key if x.isnumeric()))
	if down(key, ring)//10-ring:
		sklep, pack, cack_ = '', '', -1
		for i, x in enumerate(key[:len(pack_)-69]):
			sklep = sklep + pack_[~crypt.find(x)-len(pack):cack_]
			pack = pack + pack_[cack_] 
			cack_ = ~crypt.find(x)-len(pack)
		sklep += pack_[:cack_+1]
		pack = pack.translate(str.maketrans(sklep, crypt))
		pack = ''.join(chr(ord(pack[x])+ord(key[-2])-ord(key[-1])) for x in range(len(pack)))
	else:
		pack = f'{ICON[3]} –Ω–∞—Ö—É–π–ø–æ—à—ë–ª'
	return pack

def crypter(random, pack, key) -> str:
	sklep = [x for x in crypt]; random.shuffle(sklep); sklep = ''.join(sklep);
	pack = ''.join(chr(ord(pack[x])-ord(key[-2])+ord(key[-1])) for x in range(len(pack)))
	pack = pack.translate(str.maketrans(crypt, sklep))
	pack_, cack_ = '', 0
	for i, x in enumerate(pack):
		pack_ = sklep[cack_:crypt.find(key[i])] + x + pack_
		cack_ = crypt.find(key[i])
	pack_ = sklep[cack_:] + pack_
	return pack_

def down(key, ring) -> int:
	pyramid = [[x+i for x in range(i)] for i in range(1, ring)]
	def tentaculum(level, index):
		while level < len(pyramid)-1:
			return max(
			pyramid[level][index] + tentaculum(level+1, index),
			pyramid[level][index] + tentaculum(level+1, index+1)
			)
		return pyramid[level][index]
	return tentaculum(0, 0)

def generator(random, length=8):
	password = ''.join([random.choice(crypt) for x in range(int(length))])
	return password


#‚ñë‚ñë       ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë   ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë   ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë  ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë  
#‚ñí‚ñí      ‚ñí‚ñí    ‚ñí‚ñí ‚ñí‚ñí       ‚ñí‚ñí       ‚ñí‚ñí      ‚ñí‚ñí   ‚ñí‚ñí 
#‚ñí‚ñí      ‚ñí‚ñí    ‚ñí‚ñí ‚ñí‚ñí   ‚ñí‚ñí‚ñí ‚ñí‚ñí   ‚ñí‚ñí‚ñí ‚ñí‚ñí‚ñí‚ñí‚ñí   ‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí  
#‚ñì‚ñì      ‚ñì‚ñì    ‚ñì‚ñì ‚ñì‚ñì    ‚ñì‚ñì ‚ñì‚ñì    ‚ñì‚ñì ‚ñì‚ñì      ‚ñì‚ñì   ‚ñì‚ñì 
#‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà 


async def logit(type_: str, client=None, channel_id=None, member=None, author=None, cursor=None, action=None, command=None, e=None):
	title = {
		'MEMBER': f'{ICON[-3]} ü°∂**‚îäMEMBER**',	
		'DAFUCK': f'{ICON[-6]} ü°∂**‚îä{action} ERR‚õ∂R:**\n',
		'ERROR_': f'{ICON[+0]} ü°∂**‚îäERR‚õ∂R:**\n',
		'ACTION': {
		'INSERT': f'{ICON[-4]} ü°∂**‚îä{action}:**\n',
		'UPDATE': f'{ICON[-4]} ü°∂**‚îä{action}:**\n',
		'CREATE': f'{ICON[-5]} ü°∂**‚îä{action}:**\n',
		 'ALTER': f'{ICON[-5]} ü°∂**‚îä{action}:**\n',
		  'DROP': f'{ICON[-5]} ü°∂**‚îä{action}:**\n'
		}
	}
	message_ = title[type_][action] if type_ == 'ACTION' else title[type_]
	if member: message_ = f'{message_} **||{member.name}||**\n';
	if author: message_ = f'{message_} error commander {author} fucked up';
	if channel_id: message_ = f'{message_} in <#{channel_id}>';
	message_ = f'{message_}:\n' if author or channel_id else f'{message_}'
	if type_ == 'MEMBER': message_ = f'{message_} big brother wrote it all down:\n' if not cursor else \
	                                 f'{message_} back to the server and already in base:\n';
	if cursor:
		cursor.execute('SELECT register, mention, discord_id, name, score \
						FROM members WHERE discord_id = {};'.format(member.id))
		user_info = cursor.fetchall()
		message_ = f'{message_}{CODE}{" Ôπï ".join(str(x) for x in user_info[0])}{CODE}\n'
	if command:
		message_ = f'{message_}{CODE}{action} {command}{CODE}\n'
	if e:
		message_ = f'{message_}{CODE}{e}{CODE}'
	await client.get_channel(LOGS_ID).send(message_)
